apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-service
  annotations: # (=configuration rules)
    kubernetes.io/ingress.class: nginx # this configuration rule is essentially telling k8s that
                                      # we want to create an ingress controller based on the nginx project.
    nginx.ingress.kubernetes.io/rewrite-target: /$1  # this rule is gonna specifically configure how our copy of nginx behaves.
                                                   # this rule in particular says that if we end up matching a route
                                                   # like '/api' right here after deciding to send it to the server
                                                   # that configuration is going first do a little bit of a rewrite on the request

                                                   # And essentially it's going to remove the '/api' (slash API) part.
    certmanager.k8s.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
    - hosts:
        - k8s-multi.com
        - www.k8s-multi.com
      secretName: k8s-multi-com
  rules: # our rules are saying that there are two possible paths that we can match traffic to.
    - host: k8s-multi.com
      http:
        paths:
          - path: /?(.*)
            backend:
              serviceName: client-cluster-ip-service
              servicePort: 3000
          - path: /api/?(.*)
            backend:
              serviceName: server-cluster-ip-service
              servicePort: 5000
    - host: www.k8s-multi.com
      http:
        paths:
          - path: /?(.*)
            backend:
              serviceName: client-cluster-ip-service
              servicePort: 3000
          - path: /api/?(.*)
            backend:
              serviceName: server-cluster-ip-service
              servicePort: 5000