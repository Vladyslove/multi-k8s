apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1 # have 2 - is bad -> the same file system without them being aware of each other
                # and have them very distinctly cooperate with each other is a recipe for disaster.
                # it's possible - but requires a lot of more configuration
  selector:
    matchLabels:
      component: postgres
  template:
    metadata:
      labels:
        component: postgres
    spec:
      # When we put together our template we said we want to have
      # a volume available that matches these requirements.
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          # And then inside the container we put together some actual
          # options to say take that volume and make it available
          # inside of this very particular container.
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgpassword
                  key: PGPASSWORD